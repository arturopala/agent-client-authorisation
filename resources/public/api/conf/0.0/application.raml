#%RAML 1.0
title: Agent Client Authorisation
version: 0.0
protocols: [ HTTPS ]
baseUri: https://api.service.hmrc.gov.uk/
mediaType: [ application/json, application/hal+json ]
description: An API for agents and clients akin to the paper 64-8 form.  The production version of this API is not yet available, only the test version which should be accessed using your test credentials.

documentation:
 - title: Overview
   content: !include docs/overview.md
 - title: Versioning
   content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/versioning.md
 - title: Errors
   content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/errors.md

uses:
  sec: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/securitySchemes.raml
  headers: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/headers.raml
  annotations: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/annotations.raml
  types: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/types.raml

types:

  # These Service and Status RAML type duplicate the service and status JSON Schema types. The RAML and JSON Schema types both need to be updated in concert.
  # The reason we need both is a current limitation in the api-documentation-raml-frontend whereby types referenced by query parameters must be RAML types and types referenced by bodies must be JSON Schemas.
  Service:
    description: The Government Gateway service for the tax regime
    type: string
    enum: [ HMRC-MTD-IT ]

  Status:
    displayName: Statuses
    enum: [ Pending, Accepted, Rejected, Cancelled ]
    type: string


traits:
  loginRequired:
    responses:
      401:
        body:
          application/json:
            type: types.errorResponse
            examples:
              invalidCredentials:
                description: Invalid Authentication information provided.
                value:
                  code: INVALID_CREDENTIALS

  permissionOnAgencyRequired:
    responses:
      403:
        body:
          application/json:
            type: types.errorResponse
            examples:
              noPermissionOnAgency:
                description: The logged in user is not permitted to access invitations for the specified agency.
                value:
                  code: NO_PERMISSION_ON_AGENCY

  permissionOnClientRequired:
    responses:
      403:
        body:
          application/json:
            type: types.errorResponse
            examples:
              noPermissionOnArn:
                description: The logged in user is not permitted to see the invitations for the specified client.
                value:
                  code: NO_PERMISSION_ON_CLIENT

  mustBeAnAgent:
    responses:
      403:
        body:
          application/json:
            type: types.errorResponse
            examples:
              notAnAgent:
                description: The logged in user is not an agent.
                value:
                  code: NOT_AN_AGENT

  mustBeASaClient:
    responses:
      403:
        body:
          application/json:
            type: types.errorResponse
            examples:
              saEnrolmentNotFound:
                description: The Client must have an active IR-SA enrolment.
                value:
                  code: SA_ENROLMENT_NOT_FOUND

  agentRegistrationRequired:
    responses:
      403:
        body:
          application/json:
            type: types.errorResponse
            examples:
              agentRegistrationNotFound:
                description: The Agent's MTDfB registration was not found.
                value:
                  code: AGENT_REGISTRATION_NOT_FOUND

  clientRegistrationRequired:
    responses:
      403:
        body:
          application/json:
            type: types.errorResponse
            examples:
              clientRegistrationNotFound:
                description: The Client's MTDfB registration was not found.
                value:
                  code: CLIENT_REGISTRATION_NOT_FOUND

  invitationMustHaveValidStatus:
    responses:
      403:
        body:
          application/json:
            type: types.errorResponse
            examples:
              invalidInvitationStatus:
                description: The requested state transition is not permitted given the invitation's current status.
                value:
                  code: INVALID_INVITATION_STATUS

  invitationSpecified:
    responses:
      404:
        body:
          application/json:
            type: types.errorResponse
            examples:
              invitationNotFound:
                description: The specified invitation was not found.
                value:
                  code: INVITATION_NOT_FOUND

/agent-client-authorisation/agencies/{arn}/invitations/sent:
  is: [headers.acceptHeader, loginRequired, mustBeAnAgent, agentRegistrationRequired, permissionOnAgencyRequired]
  uriParameters:
    arn:
      description: The MTD platform Agent Registration Number.
      type: string
      example: AARN9999999
  get:
    displayName: Get invitations sent by the agency
    description: Retrieves a list of invitations sent by the agency.
    (annotations.scope): "read:sent-invitations"
    securedBy: [ sec.oauth_2_0: { scopes: [ "read:sent-invitations" ] } ]
    queryParameters:
      status:
        type: Status
        description: Filter invitations by status. If multiple 'status' filtering parameters are supplied then only the first is considered.
        example:  Pending
        required: false
      clientId:
        type: string
        description: Client's top level ID for their MTD registration (not regime specific).
        example:  client123
        required: false
      service:
        type: Service
        description: The Government Gateway service for the tax regime.
        example:  HMRC-MTD-IT
        required: false
    responses:
      200:
        body:
          application/json:
            description: A list of invitations.
            type: !include schemas/invitations.json
            example: !include examples/get-agency-invitations-sent-example.json
  post:
    is: [clientRegistrationRequired]
    displayName: Create a new invitation
    (annotations.scope): "write:sent-invitations"
    securedBy: [ sec.oauth_2_0: { scopes: [ "write:sent-invitations" ] } ]
    body:
      application/json:
        description: Create a new invitation.
        type: !include schemas/create-invitation.json
        example: !include examples/post-agency-invitations-sent-example.json
    responses:
      201:
        description: The invitation was successfully created.
        headers:
          Location:
            example: /agencies/AARN9999999/invitations/sent/5888c22e11000011007afc11
            description: Location of the invitation that was created.
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              invalidPostcode:
                description: The submitted postcode does not match the expected format.
                value:
                  code: POSTCODE_FORMAT_INVALID
              invalidClientId:
                description: The submitted clientId does not match the expected format.
                value:
                  code: CLIENT_ID_FORMAT_INVALID
      403:
        body:
          application/json:
            type: types.errorResponse
            examples:
              postcodeDoesNotMatch:
                description: The submitted postcode did not match the client's postcode as held by HMRC.
                value:
                  code: POSTCODE_DOES_NOT_MATCH
      501:
        body:
          application/json:
            type: types.errorResponse
            examples:
              unsupportedService:
                description: The submitted service is not currently supported by this API.
                value:
                  code: UNSUPPORTED_SERVICE
              unsupportedClientIdType:
                description: The submitted clientIdType is not currently supported by this API.
                value:
                  code: UNSUPPORTED_CLIENT_ID_TYPE

  /{invitationId}:
    is: [headers.acceptHeader, loginRequired, mustBeAnAgent, agentRegistrationRequired, permissionOnAgencyRequired, invitationSpecified]
    uriParameters:
      invitationId:
        description: A unique invitation id
        type: string
        example: 5888c22e11000011007afc11
    get:
      displayName: Get a sent invitation
      description: Retrieve a sent invitation.
      (annotations.scope): "read:sent-invitations"
      securedBy: [ sec.oauth_2_0: { scopes: [ "read:sent-invitations" ] } ]
      responses:
        200:
          body:
            application/json:
                description: Returns the invitation.
                type: !include schemas/invitation.json
                example: !include examples/get-agency-invitation-sent-example.json
        401:
          description: The agent must be authenticated and authorised (logged-in) to use this resource
        403:
          description: The agent is not permitted to see this invitation.
        404:
          description: The invitation with the specified id does not exist.
    /cancel:
      is: [headers.acceptHeader, loginRequired, mustBeAnAgent, agentRegistrationRequired, permissionOnAgencyRequired, invitationSpecified, invitationMustHaveValidStatus]
      put:
        displayName: Cancel an invitation
        description: Cancel an invitation.
        (annotations.scope): "write:sent-invitations"
        securedBy: [ sec.oauth_2_0: { scopes: [ "write:sent-invitations" ] } ]
        responses:
          204:
            description: Invitation has been cancelled.
          401:
            description: The agent must be authenticated and authorised (logged-in) to use this resource
          403:
            description: The agent is not permitted to cancel this invitation, for example because it has already been accepted or rejected.
          404:
            description: The invitation with the specified id does not exist.

/agent-client-authorisation/clients/{clientId}/invitations/received:
  is: [headers.acceptHeader, loginRequired, mustBeASaClient, clientRegistrationRequired, permissionOnClientRequired]
  uriParameters:
    clientId:
      description: Client's top level ID for their MTD registration (not regime specific).
      type: string
      example:  client123
  get:
    displayName: Get invitations received by a client
    description: Retrieves a list of invitations received by a client
    (annotations.scope): "read:received-invitations"
    securedBy: [ sec.oauth_2_0: { scopes: [ "read:received-invitations" ] } ]
    queryParameters:
      status:
        description: filter invitations by status. If multiple 'status' filtering parameters are supplied then only the first is considered.
        type: Status
        example: Pending
        required: false
    responses:
      200:
        body:
          application/json:
            description: A list of invitations.
            type: !include schemas/invitations.json
            example: !include examples/get-client-invitations-received-example.json
      401:
        description: The client must be authenticated and authorised (logged-in) to use this resource
      403:
        description: The client is not permitted to see these invitations.

  /{invitationId}:
    is: [headers.acceptHeader, loginRequired, mustBeASaClient, clientRegistrationRequired, permissionOnClientRequired, invitationSpecified]
    get:
      displayName: Get a received invitation
      description: Retrieve a received invitation.
      (annotations.scope): "read:received-invitations"
      securedBy: [ sec.oauth_2_0: { scopes: [ "read:received-invitations" ] } ]
      responses:
        200:
          body:
            application/json:
                description: Returns the invitation.
                type: !include schemas/invitation.json
                example: !include examples/get-client-invitation-example.json
        401:
          description: The client must be authenticated and authorised (logged-in) to use this resource
        403:
          description: The client is not permitted to reject this invitation, for example because it has already been accepted, rejected or cancelled.
        404:
          description: The invitation with the specified id does not exist.
    uriParameters:
      invitationId:
        description: The id of the invitation.
        type: string
        example: 5888c22e11000011007afc11
    /accept:
      is: [headers.acceptHeader, loginRequired, mustBeASaClient, clientRegistrationRequired, permissionOnClientRequired, invitationSpecified, invitationMustHaveValidStatus]
      put:
        displayName: Accept an invitation
        description: Accept an invitation.
        (annotations.scope): "write:received-invitations"
        securedBy: [ sec.oauth_2_0: { scopes: [ "write:received-invitations" ] } ]
        responses:
          204:
            description: Invitation has been accepted.
          401:
            description: The client must be authenticated and authorised (logged-in) to use this resource
          403:
            description: The client is not permitted to reject this invitation, for example because it has already been accepted, rejected or cancelled.
          404:
            description: The invitation with the specified id does not exist.
    /reject:
      is: [headers.acceptHeader, loginRequired, mustBeASaClient, clientRegistrationRequired, permissionOnClientRequired, invitationSpecified, invitationMustHaveValidStatus]
      put:
        displayName: Reject an invitation
        description: Reject an invitation.
        (annotations.scope): "write:received-invitations"
        securedBy: [ sec.oauth_2_0: { scopes: [ "write:received-invitations" ] } ]
        responses:
          204:
            description: Invitation has been rejected.
          401:
            description: The client must be authenticated and authorised (logged-in) to use this resource
          403:
            description: The client is not permitted to reject this invitation.
          404:
            description: The invitation with the specified id does not exist.
